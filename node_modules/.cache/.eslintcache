[{"/home/trellis/react-node-app/client/src/index.js":"1","/home/trellis/react-node-app/client/src/Main.js":"2","/home/trellis/react-node-app/client/src/layout/ButtonAppBar.js":"3","/home/trellis/react-node-app/client/src/layout/LeafletMap.js":"4","/home/trellis/react-node-app/client/src/containers/MapContainer.js":"5","/home/trellis/react-node-app/client/src/api/DataProvider.js":"6","/home/trellis/react-node-app/client/src/components/MapCalculator.js":"7","/home/trellis/react-node-app/client/src/api/Context.js":"8","/home/trellis/react-node-app/client/src/icons/Icon.js":"9","/home/trellis/react-node-app/client/src/customHooks/useWidth.js":"10","/home/trellis/react-gallry-app/src/index.js":"11","/home/trellis/react-gallry-app/src/Main.js":"12","/home/trellis/react-gallry-app/src/containers/GalleryContainer.js":"13","/home/trellis/react-gallry-app/src/api/DataProvider.js":"14","/home/trellis/react-gallry-app/src/components/GalleryCalculator.js":"15","/home/trellis/react-gallry-app/src/layout/TitlebarImageList.js":"16","/home/trellis/react-gallry-app/src/customHooks/useWidth.js":"17","/home/trellis/react-gallry-app/src/components/ImageContainer.js":"18","/home/trellis/react-gallry-app/src/contexts/Context.js":"19"},{"size":177,"mtime":1648745874286,"results":"20","hashOfConfig":"21"},{"size":532,"mtime":1648722674841,"results":"22","hashOfConfig":"21"},{"size":2441,"mtime":1648745965971,"results":"23","hashOfConfig":"21"},{"size":3929,"mtime":1648747263697,"results":"24","hashOfConfig":"21"},{"size":599,"mtime":1648745840845,"results":"25","hashOfConfig":"21"},{"size":1328,"mtime":1648753600027,"results":"26","hashOfConfig":"21"},{"size":531,"mtime":1648745813845,"results":"27","hashOfConfig":"21"},{"size":84,"mtime":1648620687813,"results":"28","hashOfConfig":"21"},{"size":1634,"mtime":1648745933122,"results":"29","hashOfConfig":"21"},{"size":415,"mtime":1648745827477,"results":"30","hashOfConfig":"21"},{"size":178,"mtime":1650438759536,"results":"31","hashOfConfig":"32"},{"size":882,"mtime":1650459076459,"results":"33","hashOfConfig":"32"},{"size":589,"mtime":1650398502621,"results":"34","hashOfConfig":"32"},{"size":1341,"mtime":1650460920136,"results":"35","hashOfConfig":"32"},{"size":612,"mtime":1650460938525,"results":"36","hashOfConfig":"32"},{"size":4036,"mtime":1650464001940,"results":"37","hashOfConfig":"32"},{"size":415,"mtime":1648745827477,"results":"38","hashOfConfig":"32"},{"size":1072,"mtime":1650463498855,"results":"39","hashOfConfig":"32"},{"size":139,"mtime":1650459966920,"results":"40","hashOfConfig":"32"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"g8rroj",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},"103b3y7",{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"77"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"77"},{"filePath":"94","messages":"95","suppressedMessages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/trellis/react-node-app/client/src/index.js",[],[],"/home/trellis/react-node-app/client/src/Main.js",[],[],["103","104"],"/home/trellis/react-node-app/client/src/layout/ButtonAppBar.js",[],[],"/home/trellis/react-node-app/client/src/layout/LeafletMap.js",[],[],"/home/trellis/react-node-app/client/src/containers/MapContainer.js",[],[],"/home/trellis/react-node-app/client/src/api/DataProvider.js",[],[],"/home/trellis/react-node-app/client/src/components/MapCalculator.js",[],[],["105","106"],"/home/trellis/react-node-app/client/src/api/Context.js",[],[],["107","108"],"/home/trellis/react-node-app/client/src/icons/Icon.js",[],[],"/home/trellis/react-node-app/client/src/customHooks/useWidth.js",[],[],"/home/trellis/react-gallry-app/src/index.js",[],[],["109","110"],"/home/trellis/react-gallry-app/src/Main.js",["111"],[],"/home/trellis/react-gallry-app/src/containers/GalleryContainer.js",[],[],"/home/trellis/react-gallry-app/src/api/DataProvider.js",[],[],"/home/trellis/react-gallry-app/src/components/GalleryCalculator.js",["112"],[],"/home/trellis/react-gallry-app/src/layout/TitlebarImageList.js",["113"],[],"import { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport IconButton from '@mui/material/IconButton';\nimport InfoIcon from '@mui/icons-material/Info';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { useWidth } from '../customHooks/useWidth';\nimport { ImageContainer } from '../components/ImageContainer';\n\nconst avilableSizes = [150, 300, 450, 600];\n\nfunction getTitleBarClassName(item) {\n  console.log(item.cols + ' ' + item.rows);\n  var className = 'title-bar-';\n  switch(item.rows) {\n    case 1:\n      return className += 's';\n    case 2:\n      return className += 'md';\n    default:\n      return className += 's'; \n  }\n}\n\nfunction TitlebarImageList({ imagesData }) {\n  const [selectedImageItem, setSelectedImageItem] = useState(null);\n  const [showDot, setShowDot] = useState(false);\n  const [currentImagesData, setCurrentImagesData] = useState(null);\n  const { width: windowWidth } = useWidth();\n  let navigate = useNavigate();\n\n  const routeToImageDetails = (item) =>{ \n    let path = `/details`; \n    navigate(path, {state:{id: 1, url: item.url, title: item.title}});\n    setSelectedImageItem(item);\n  }\n\n  useEffect(() => {\n    const data = imagesData.slice(0, 100);\n    data.map((element, index) => {\n      const arr = element.url.split('/');\n      arr[3] = avilableSizes[index%4]\n      element.url = arr.join('/');\n      element.cols = Math.round(1 + Math.random());\n      element.rows = Math.round(1 + Math.random());;\n    })\n    setCurrentImagesData(data);\n\n  }, [imagesData])\n\n  useEffect(() => {\n    selectedImageItem ? setShowDot(true) : setShowDot(false);\n  }, [selectedImageItem])\n\n  return (\n    <>\n      <Autocomplete\n        freeSolo\n        id=\"free-solo-2-demo\"\n        disableClearable\n        options={top100Films.map((option) => option.title)}\n        renderInput={(params) => (\n          <TextField\n            {...params}\n            label=\"Search input\"\n            InputProps={{\n              ...params.InputProps,\n              type: 'search',\n            }}\n          />\n      <div className='selected-image-container'>\n        { showDot ? <ImageContainer item={selectedImageItem} /> : null }\n      </div>\n      { currentImagesData ? \n      <ImageList sx={{ width: windowWidth, height: 1000 }}\n                 cols={4}\n                 rowHeight={150}\n                 variant=\"quilted\"\n                 gap={8}>\n        <ImageListItem key=\"Subheader\" cols={2}>\n          <ListSubheader component=\"div\">Aqua Gallery</ListSubheader>\n        </ImageListItem>\n        {currentImagesData.map((item) => (\n          <ImageListItem key={item.url} cols={item.cols || 1} rows={item.rows || 1}>\n            <img\n              id=\"img-elm\"\n              src={`${item.url}?w=248&fit=crop&auto=format`}\n              srcSet={`${item.url}?w=248&fit=crop&auto=format&dpr=2 2x`}\n              alt={item.title}\n              loading=\"lazy\"\n              onClick={() => routeToImageDetails(item)}\n            />\n            <div id=\"title-bar-elm\">\n              <ImageListItemBar\n                className={getTitleBarClassName(item)}\n                title={item.title}\n                position={\"top\"}\n                actionIcon={\n                  <IconButton\n                    sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                    aria-label={`info about ${item.title}`}\n                  >\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </div>\n          </ImageListItem>\n        ))}\n      </ImageList> : null}\n    </>\n  );\n}\n\nTitlebarImageList.propTypes = {\n  imagesData: PropTypes.array,\n  };\n  \nexport default TitlebarImageList;","/home/trellis/react-gallry-app/src/customHooks/useWidth.js",[],[],"/home/trellis/react-gallry-app/src/components/ImageContainer.js",["114","115","116"],[],"/home/trellis/react-gallry-app/src/contexts/Context.js",["117"],[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"118","replacedBy":"122"},{"ruleId":"120","replacedBy":"123"},{"ruleId":"118","replacedBy":"124"},{"ruleId":"120","replacedBy":"125"},{"ruleId":"118","replacedBy":"126"},{"ruleId":"120","replacedBy":"127"},{"ruleId":"128","severity":1,"message":"129","line":6,"column":3,"nodeType":"130","messageId":"131","endLine":6,"endColumn":10},{"ruleId":"132","severity":1,"message":"133","line":15,"column":8,"nodeType":"134","endLine":15,"endColumn":20,"suggestions":"135"},{"ruleId":null,"fatal":true,"severity":2,"message":"136","line":77,"column":6},{"ruleId":"128","severity":1,"message":"137","line":1,"column":17,"nodeType":"130","messageId":"131","endLine":1,"endColumn":24},{"ruleId":"128","severity":1,"message":"138","line":5,"column":8,"nodeType":"130","messageId":"131","endLine":5,"endColumn":19},{"ruleId":"128","severity":1,"message":"139","line":8,"column":8,"nodeType":"130","messageId":"131","endLine":8,"endColumn":14},{"ruleId":"128","severity":1,"message":"140","line":4,"column":7,"nodeType":"130","messageId":"131","endLine":4,"endColumn":30},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],["141"],["142"],["141"],["142"],["141"],["142"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useMemo has a missing dependency: 'layoutProps'. Either include it or remove the dependency array.","ArrayExpression",["143"],"Parsing error: Adjacent JSX elements must be wrapped in an enclosing tag. Did you want a JSX fragment <>...</>? (77:6)","'useMemo' is defined but never used.","'CardActions' is defined but never used.","'Button' is defined but never used.","'getSelectedImageContext' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"144","fix":"145"},"Update the dependencies array to be: [layoutProps]",{"range":"146","text":"147"},[414,426],"[layoutProps]"]