{"ast":null,"code":"import _objectSpread from \"/home/trellis/react-gallery-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/trellis/react-gallery-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/trellis/react-gallery-app/src/components/GalleryCalculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useMemo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { getRequestContext } from '../contexts/Context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function GalleryCalculator(_ref) {\n  _s();\n\n  var _this = this;\n\n  var Layout = _ref.layout;\n  var data = useContext(getRequestContext);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      imagesData = _useState2[0],\n      setImagesData = _useState2[1];\n\n  var layoutProps = {\n    imagesData: imagesData\n  };\n  var prepareDisplay = useMemo(function () {\n    return /*#__PURE__*/_jsxDEV(Layout, _objectSpread({\n      className: \"gallery-layout\"\n    }, layoutProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, _this);\n  }, [imagesData]);\n  useEffect(function () {\n    if (data) {\n      setImagesData(data);\n      localStorage.setItem(\"imagesData\", imagesData);\n    } else {\n      setImagesData(localStorage.getItem(\"imagesData\"));\n      localStorage.removeItem(\"imagesData\");\n      console.log(localStorage.getItem(\"imagesData\"));\n    }\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: imagesData ? prepareDisplay : null\n  }, void 0, false);\n}\n\n_s(GalleryCalculator, \"TTKTMjQgMxoMODC6mk9t9v23xpA=\");\n\n_c = GalleryCalculator;\nGalleryCalculator.propTypes = {\n  layout: PropTypes.func.isRequired\n};\nexport default GalleryCalculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"GalleryCalculator\");","map":{"version":3,"sources":["/home/trellis/react-gallery-app/src/components/GalleryCalculator.js"],"names":["React","useContext","useMemo","useEffect","useState","PropTypes","getRequestContext","GalleryCalculator","Layout","layout","data","imagesData","setImagesData","layoutProps","prepareDisplay","localStorage","setItem","getItem","removeItem","console","log","propTypes","func","isRequired"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,EAA4BC,OAA5B,EAAqCC,SAArC,EAAgDC,QAAhD,QAAgE,OAAhE;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SAASC,iBAAT,QAAkC,qBAAlC;;;AAEA,OAAO,SAASC,iBAAT,OAA+C;AAAA;;AAAA;;AAAA,MAAVC,MAAU,QAAlBC,MAAkB;AACpD,MAAMC,IAAI,GAAGT,UAAU,CAACK,iBAAD,CAAvB;;AACA,kBAAoCF,QAAQ,CAAC,IAAD,CAA5C;AAAA;AAAA,MAAOO,UAAP;AAAA,MAAmBC,aAAnB;;AAEA,MAAMC,WAAW,GAAG;AAClBF,IAAAA,UAAU,EAAVA;AADkB,GAApB;AAIA,MAAMG,cAAc,GAAGZ,OAAO,CAC5B;AAAA,wBACE,QAAC,MAAD;AAAQ,MAAA,SAAS,EAAC;AAAlB,OAAuCW,WAAvC;AAAA;AAAA;AAAA;AAAA,aADF;AAAA,GAD4B,EAGzB,CAACF,UAAD,CAHyB,CAA9B;AAKER,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGO,IAAH,EAAQ;AACNE,MAAAA,aAAa,CAACF,IAAD,CAAb;AACAK,MAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCL,UAAnC;AACD,KAHD,MAGO;AACLC,MAAAA,aAAa,CAACG,YAAY,CAACE,OAAb,CAAqB,YAArB,CAAD,CAAb;AACAF,MAAAA,YAAY,CAACG,UAAb,CAAwB,YAAxB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAY,CAACE,OAAb,CAAqB,YAArB,CAAZ;AACD;AACF,GATQ,EASN,CAACP,IAAD,CATM,CAAT;AAWF,sBACE;AAAA,cACGC,UAAU,GAAGG,cAAH,GAAoB;AADjC,mBADF;AAKD;;GA7BeP,iB;;KAAAA,iB;AA+BhBA,iBAAiB,CAACc,SAAlB,GAA8B;AAC5BZ,EAAAA,MAAM,EAAEJ,SAAS,CAACiB,IAAV,CAAeC;AADK,CAA9B;AAIA,eAAehB,iBAAf","sourcesContent":["import React, { useContext, useMemo, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getRequestContext } from '../contexts/Context'\n\nexport function GalleryCalculator({ layout: Layout }) {\n  const data = useContext(getRequestContext);\n  const [imagesData, setImagesData] = useState(null);\n\n  const layoutProps = {\n    imagesData,\n  };\n\n  const prepareDisplay = useMemo(\n    () => (\n      <Layout className=\"gallery-layout\" {...layoutProps} />\n    ), [imagesData])\n\n    useEffect(() => {\n      if(data){\n        setImagesData(data);\n        localStorage.setItem(\"imagesData\", imagesData);\n      } else {\n        setImagesData(localStorage.getItem(\"imagesData\"));\n        localStorage.removeItem(\"imagesData\");\n        console.log(localStorage.getItem(\"imagesData\"));\n      }\n    }, [data])\n\n  return (\n    <>\n      {imagesData ? prepareDisplay : null}\n    </>\n  );\n}\n\nGalleryCalculator.propTypes = {\n  layout: PropTypes.func.isRequired,\n};\n\nexport default GalleryCalculator;"]},"metadata":{},"sourceType":"module"}