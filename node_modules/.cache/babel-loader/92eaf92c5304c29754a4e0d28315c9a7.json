{"ast":null,"code":"import _slicedToArray from \"/home/trellis/react-gallery-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nexport function useWidth() {\n  _s();\n\n  var _useState = useState({\n    width: undefined,\n    height: undefined\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      windowSize = _useState2[0],\n      setWindowSize = _useState2[1];\n\n  useEffect(function () {\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    } // Add event listener\n\n\n    window.addEventListener(\"resize\", handleResize); // Call handler right away so state gets updated with initial window size\n\n    handleResize(); // Remove event listener on cleanup\n\n    return function () {\n      return window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []); // Empty array ensures that effect is only run on mount\n\n  return windowSize;\n}\n\n_s(useWidth, \"WMqaMVAPr0u8CJVTsAIdEuYrbbM=\");","map":{"version":3,"sources":["/home/trellis/react-gallery-app/src/customHooks/useWidth.js"],"names":["useState","useEffect","useWidth","width","undefined","height","windowSize","setWindowSize","handleResize","window","innerWidth","innerHeight","addEventListener","removeEventListener"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,OAAO,SAASC,QAAT,GAAoB;AAAA;;AACzB,kBAAoCF,QAAQ,CAAC;AAC3CG,IAAAA,KAAK,EAAEC,SADoC;AAE3CC,IAAAA,MAAM,EAAED;AAFmC,GAAD,CAA5C;AAAA;AAAA,MAAOE,UAAP;AAAA,MAAmBC,aAAnB;;AAKAN,EAAAA,SAAS,CAAC,YAAM;AACd,aAASO,YAAT,GAAwB;AACtB;AACAD,MAAAA,aAAa,CAAC;AACZJ,QAAAA,KAAK,EAAEM,MAAM,CAACC,UADF;AAEZL,QAAAA,MAAM,EAAEI,MAAM,CAACE;AAFH,OAAD,CAAb;AAID,KAPa,CAQd;;;AACAF,IAAAA,MAAM,CAACG,gBAAP,CAAwB,QAAxB,EAAkCJ,YAAlC,EATc,CAUd;;AACAA,IAAAA,YAAY,GAXE,CAYd;;AACA,WAAO;AAAA,aAAMC,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC,CAAN;AAAA,KAAP;AACD,GAdQ,EAcN,EAdM,CAAT,CANyB,CAoBjB;;AACR,SAAOF,UAAP;AACD;;GAtBeJ,Q","sourcesContent":["import { useState, useEffect } from 'react';\n\nexport function useWidth() {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      // Set window width/height to state\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    }\n    // Add event listener\n    window.addEventListener(\"resize\", handleResize);\n    // Call handler right away so state gets updated with initial window size\n    handleResize();\n    // Remove event listener on cleanup\n    return () => window.removeEventListener(\"resize\", handleResize);\n  }, []); // Empty array ensures that effect is only run on mount\n  return windowSize;\n}\n"]},"metadata":{},"sourceType":"module"}