{"ast":null,"code":"import _slicedToArray from \"/home/trellis/react-node-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/trellis/react-node-app/client/src/layout/LeafletMap.js\",\n    _s = $RefreshSig$();\n\nimport { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, TileLayer, Marker, Popup, Polygon, Tooltip, Rectangle, CircleMarker, Circle } from 'react-leaflet';\nimport L from 'leaflet';\nimport { iconTractor, iconDrone } from '../layout/icons/Icon';\nimport '../styles.css';\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeafletMap(_ref) {\n  _s();\n\n  var _this = this;\n\n  var data = _ref.data;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      activePark = _useState2[0],\n      setActivePark = _useState2[1];\n\n  var prepareTooltipText = function prepareTooltipText(element) {\n    var tooltipText = /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n\n    if (Object.prototype.hasOwnProperty.call(element, '_id') && Object.prototype.hasOwnProperty.call(element, 'type') && Object.prototype.hasOwnProperty.call(element, 'status')) {\n      tooltipText = /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"front-tooltip-class\",\n        children: [/*#__PURE__*/_jsxDEV(\"b\", {\n          children: [\"Hello \", element._id, \"!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, _this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 17\n        }, _this), \": \", element._id, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 42\n        }, _this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 17\n        }, _this), \": \", element.type, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 45\n        }, _this), /*#__PURE__*/_jsxDEV(\"b\", {\n          children: \"Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 17\n        }, _this), \": \", element.status]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 27\n      }, _this);\n    }\n\n    return tooltipText;\n  };\n\n  var prepareDisplay = function prepareDisplay() {\n    console.log(data.vehicles[0].location);\n    return /*#__PURE__*/_jsxDEV(MapContainer, {\n      center: [55.74101998457737, 37.62268066406251],\n      zoom: 14,\n      scrollWheelZoom: false,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, _this), data.vehicles.map(function (element) {\n        return /*#__PURE__*/_jsxDEV(Marker, {\n          position: [element.location.latitude, element.location.longitude],\n          onClick: function onClick() {\n            setActivePark(element);\n          },\n          icon: element.type === 'drone' ? iconDrone : iconTractor,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            opacity: '0.9',\n            direction: 'top',\n            offset: L.point(-10, -15),\n            children: prepareTooltipText(element)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, _this)\n        }, element._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, _this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data ? prepareDisplay() : null\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeafletMap, \"sW4gufaFIGjRmegZMUwGCYd9xh0=\");\n\n_c = LeafletMap;\nLeafletMap.propTypes = {\n  data: PropTypes.object.isRequired\n};\nexport default LeafletMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"sources":["/home/trellis/react-node-app/client/src/layout/LeafletMap.js"],"names":["useMemo","useState","PropTypes","MapContainer","TileLayer","Marker","Popup","Polygon","Tooltip","Rectangle","CircleMarker","Circle","L","iconTractor","iconDrone","LeafletMap","data","activePark","setActivePark","prepareTooltipText","element","tooltipText","Object","prototype","hasOwnProperty","call","_id","type","status","prepareDisplay","console","log","vehicles","location","map","latitude","longitude","point","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, \n         TileLayer,\n         Marker,\n         Popup,\n         Polygon,\n         Tooltip, \n         Rectangle,\n         CircleMarker,\n         Circle,\n} from 'react-leaflet';\nimport L from 'leaflet';\nimport { iconTractor, iconDrone } from '../layout/icons/Icon';\nimport '../styles.css';\n\nfunction LeafletMap({ data }) {\n    const [activePark, setActivePark] = useState(null);\n\n    const prepareTooltipText = (element) => {\n        var tooltipText = <></>\n        if(Object.prototype.hasOwnProperty.call(element, '_id') &&\n           Object.prototype.hasOwnProperty.call(element, 'type') &&\n           Object.prototype.hasOwnProperty.call(element, 'status')) {\n            tooltipText = <div className='front-tooltip-class'>\n                <b>Hello {element._id}!</b>\n                <b>ID</b>: {element._id} <br/>\n                <b>Type</b>: {element.type} <br/>\n                <b>Status</b>: {element.status}\n            </div>\n        }\n        return tooltipText;\n    }\n\n    const prepareDisplay = () => {\n        console.log(data.vehicles[0].location)\n        return (\n            <MapContainer center={[55.74101998457737, 37.62268066406251]} zoom={14} scrollWheelZoom={false}>\n                <TileLayer\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n                    attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n                />\n                {data.vehicles.map(element => (\n                    <Marker\n                        key={element._id}\n                        position={[\n                            element.location.latitude,\n                            element.location.longitude\n                        ]}\n                        onClick={() => {\n                        setActivePark(element);\n                        }}\n                        icon={element.type === 'drone' ? iconDrone : iconTractor}\n                    >\n                        <Tooltip opacity={'0.9'} direction={'top'} offset={L.point(-10, -15)}>\n                            {prepareTooltipText(element)}\n                        </Tooltip>\n                    </Marker>\n                ))}\n          </MapContainer>\n        );\n      }\n\n      return (\n        <div>\n        { data ? prepareDisplay() : null }\n      </div>\n      );\n}\n\nLeafletMap.propTypes = {\n    data: PropTypes.object.isRequired,\n};\n  \nexport default LeafletMap;"]},"metadata":{},"sourceType":"module"}