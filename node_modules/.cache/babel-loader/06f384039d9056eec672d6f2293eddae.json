{"ast":null,"code":"import _slicedToArray from \"/home/trellis/react-gallry-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/trellis/react-gallry-app/src/layout/TitlebarImageList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport IconButton from '@mui/material/IconButton';\nimport InfoIcon from '@mui/icons-material/Info';\nimport PropTypes from 'prop-types';\nimport { useWidth } from '../customHooks/useWidth';\nimport { ImageContainer } from '../components/ImageContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar avilableSizes = [150, 300, 450, 600];\n\nfunction TitlebarImageList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var imagesData = _ref.imagesData;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedImageItem = _useState2[0],\n      setSelectedImageItem = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showDot = _useState4[0],\n      setShowDot = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentImagesData = _useState6[0],\n      setCurrentImagesData = _useState6[1];\n\n  var _useWidth = useWidth(),\n      windowWidth = _useWidth.width;\n\n  var updateImageItem = function updateImageItem(item) {\n    setSelectedImageItem(item);\n  };\n\n  useEffect(function () {\n    var data = imagesData.slice(0, 100);\n    data.map(function (element, index) {\n      var arr = element.url.split('/');\n      arr[3] = avilableSizes[index % 4];\n      element.url = arr.join('/');\n      element.cols = Math.round(1 + Math.random());\n      element.rows = Math.round(1 + Math.random());\n      ;\n    });\n    setCurrentImagesData(data);\n  }, [imagesData]);\n  useEffect(function () {\n    selectedImageItem ? setShowDot(true) : setShowDot(false);\n  }, [selectedImageItem]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"selected-image-container\",\n      children: showDot ? /*#__PURE__*/_jsxDEV(ImageContainer, {\n        item: selectedImageItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), currentImagesData ? /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: 500,\n        height: 450,\n        overflowY: 'scroll'\n      },\n      children: /*#__PURE__*/_jsxDEV(ImageList, {\n        sx: {\n          width: windowWidth,\n          height: 1000\n        },\n        variant: \"masonry\",\n        cols: 3,\n        gap: 8,\n        children: [/*#__PURE__*/_jsxDEV(ImageListItem, {\n          cols: 2,\n          children: /*#__PURE__*/_jsxDEV(ListSubheader, {\n            component: \"div\",\n            children: \"Aqua Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 11\n          }, this)\n        }, \"Subheader\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 9\n        }, this), currentImagesData.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(ImageListItem, {\n            cols: item.cols || 1,\n            rows: item.rows || 1,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"img-elm\",\n              src: \"\".concat(item.url, \"?w=248&fit=crop&auto=format\"),\n              srcSet: \"\".concat(item.url, \"?w=248&fit=crop&auto=format&dpr=2 2x\"),\n              alt: item.title,\n              loading: \"lazy\",\n              onClick: function onClick() {\n                return updateImageItem(item);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 13\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"title-bar-elm\",\n              children: /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n                title: item.title,\n                variant: \"woven\",\n                actionIcon: /*#__PURE__*/_jsxDEV(IconButton, {\n                  sx: {\n                    color: 'rgba(255, 255, 255, 0.54)'\n                  },\n                  \"aria-label\": \"info about \".concat(item.title),\n                  children: /*#__PURE__*/_jsxDEV(InfoIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 15\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 13\n            }, _this)]\n          }, item.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(TitlebarImageList, \"gm7zUlUl1YoFfqS/+IdL4RpRwxs=\", false, function () {\n  return [useWidth];\n});\n\n_c = TitlebarImageList;\nTitlebarImageList.propTypes = {\n  imagesData: PropTypes.array\n};\nexport default TitlebarImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TitlebarImageList\");","map":{"version":3,"sources":["/home/trellis/react-gallry-app/src/layout/TitlebarImageList.js"],"names":["useState","useEffect","Box","ImageList","ImageListItem","ImageListItemBar","ListSubheader","IconButton","InfoIcon","PropTypes","useWidth","ImageContainer","avilableSizes","TitlebarImageList","imagesData","selectedImageItem","setSelectedImageItem","showDot","setShowDot","currentImagesData","setCurrentImagesData","windowWidth","width","updateImageItem","item","data","slice","map","element","index","arr","url","split","join","cols","Math","round","random","rows","height","overflowY","title","color","propTypes","array"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport ListSubheader from '@mui/material/ListSubheader';\nimport IconButton from '@mui/material/IconButton';\nimport InfoIcon from '@mui/icons-material/Info';\nimport PropTypes from 'prop-types';\nimport { useWidth } from '../customHooks/useWidth';\nimport { ImageContainer } from '../components/ImageContainer';\n\nconst avilableSizes = [150, 300, 450, 600];\n\nfunction TitlebarImageList({ imagesData }) {\n  const [selectedImageItem, setSelectedImageItem] = useState(null);\n  const [showDot, setShowDot] = useState(false);\n  const [currentImagesData, setCurrentImagesData] = useState(null);\n  const { width: windowWidth } = useWidth();\n\n  const updateImageItem = (item) =>{ \n    setSelectedImageItem(item);\n  }\n\n  useEffect(() => {\n    const data = imagesData.slice(0, 100);\n    data.map((element, index) => {\n      const arr = element.url.split('/');\n      arr[3] = avilableSizes[index%4]\n      element.url = arr.join('/');\n      element.cols = Math.round(1 + Math.random());\n      element.rows = Math.round(1 + Math.random());;\n    })\n    setCurrentImagesData(data);\n\n  }, [imagesData])\n\n  useEffect(() => {\n    selectedImageItem ? setShowDot(true) : setShowDot(false);\n  }, [selectedImageItem])\n\n  return (\n    <>\n      <div className='selected-image-container'>\n        { showDot ? <ImageContainer item={selectedImageItem} /> : null }\n      </div>\n      { currentImagesData ? \n        <Box sx={{ width: 500, height: 450, overflowY: 'scroll' }}>\n        <ImageList sx={{ width: windowWidth, height: 1000 }} variant=\"masonry\" cols={3} gap={8}>\n        <ImageListItem key=\"Subheader\" cols={2}>\n          <ListSubheader component=\"div\">Aqua Gallery</ListSubheader>\n        </ImageListItem>\n        {currentImagesData.map((item) => (\n          <ImageListItem key={item.url} cols={item.cols || 1} rows={item.rows || 1}>\n            <img\n              id=\"img-elm\"\n              src={`${item.url}?w=248&fit=crop&auto=format`}\n              srcSet={`${item.url}?w=248&fit=crop&auto=format&dpr=2 2x`}\n              alt={item.title}\n              loading=\"lazy\"\n              onClick={() => updateImageItem(item)}\n            />\n            <div id=\"title-bar-elm\">\n              <ImageListItemBar\n                title={item.title}\n                variant=\"woven\"\n                actionIcon={\n                  <IconButton\n                    sx={{ color: 'rgba(255, 255, 255, 0.54)' }}\n                    aria-label={`info about ${item.title}`}\n                  >\n                    <InfoIcon />\n                  </IconButton>\n                }\n              />\n            </div>\n          </ImageListItem>\n        ))}\n      </ImageList></Box> : null}\n    </>\n  );\n}\n\nTitlebarImageList.propTypes = {\n  imagesData: PropTypes.array,\n  };\n  \nexport default TitlebarImageList;"]},"metadata":{},"sourceType":"module"}