{"ast":null,"code":"import _objectSpread from \"/home/trellis/react-gallery-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport _slicedToArray from \"/home/trellis/react-gallery-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\n\nvar _jsxFileName = \"/home/trellis/react-gallery-app/src/layout/TitlebarImageList.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { useWidth } from '../customHooks/useWidth';\nimport { Typography } from '@mui/material';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Autocomplete from '@mui/material/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar availableSizes = [150, 450, 600];\n\nfunction getTitleBarClassName(item) {\n  var className = 'title-bar-';\n\n  switch (item.rows) {\n    case 1:\n      return className += 's';\n\n    case 2:\n      return className += 'md';\n\n    default:\n      return className += 's';\n  }\n}\n\nfunction TitlebarImageList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var imagesData = _ref.imagesData,\n      galleryAmount = _ref.galleryAmount;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentImagesData = _useState2[0],\n      setCurrentImagesData = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      imageSearchResults = _useState4[0],\n      setImageSearchResults = _useState4[1];\n\n  var _useWidth = useWidth(),\n      windowWidth = _useWidth.width;\n\n  var navigate = useNavigate();\n\n  var routeToImageDetails = function routeToImageDetails(item) {\n    var path = \"/details\";\n    navigate(path, {\n      state: {\n        id: 1,\n        url: item.url,\n        title: item.title\n      }\n    });\n  };\n\n  useEffect(function () {\n    var data = imagesData.slice(0, galleryAmount);\n    data = data.map(function (element) {\n      var arr = element.url.split('/');\n      element.cols = Math.round(1 + Math.random());\n      element.rows = Math.round(1 + Math.random());\n      arr[3] = element.cols === 2 && element.rows === 2 ? availableSizes[2] : element.cols === 2 || element.rows === 2 ? availableSizes[1] : availableSizes[0];\n      element.url = arr.join('/');\n      return element;\n    });\n    setCurrentImagesData(data);\n    setImageSearchResults(data);\n  }, [imagesData, galleryAmount]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentImagesData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gallery-menu\",\n        s: true,\n        style: {\n          width: \"\".concat(windowWidth)\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"headline-item\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h3\",\n            component: \"h4\",\n            children: \"Aqua Gallery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {\n          className: \"search-box-item\",\n          direction: \"row\",\n          justifyContent: \"flex-end\",\n          alignItems: \"center\",\n          spacing: 2,\n          sx: {\n            width: 300\n          },\n          children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n            id: \"search-box\",\n            disableClearable: true,\n            options: currentImagesData.map(function (option) {\n              return option.title;\n            }),\n            onKeyDown: function onKeyDown(event) {\n              if (event.key === 'Enter') {\n                event.defaultMuiPrevented = true;\n                setImageSearchResults(currentImagesData.filter(function (imageData) {\n                  return imageData.title.includes(event.target.value);\n                }));\n              }\n            },\n            renderInput: function renderInput(params) {\n              return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n                label: \"Search input\",\n                InputProps: _objectSpread(_objectSpread({}, params.InputProps), {}, {\n                  type: 'search'\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, _this);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(ImageList, {\n        sx: {\n          width: windowWidth,\n          height: 1000\n        },\n        cols: 4,\n        rowHeight: 150,\n        variant: \"quilted\",\n        gap: 8,\n        children: imageSearchResults.map(function (item) {\n          return /*#__PURE__*/_jsxDEV(ImageListItem, {\n            cols: item.cols || 1,\n            rows: item.rows || 1,\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              id: \"img-elm\",\n              src: \"\".concat(item.url, \"?w=248&fit=crop&auto=format\"),\n              srcSet: \"\".concat(item.url, \"?w=248&fit=crop&auto=format&dpr=2 2x\"),\n              alt: item.title,\n              loading: \"lazy\",\n              onClick: function onClick() {\n                return routeToImageDetails(item);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              id: \"title-bar-elm\",\n              children: /*#__PURE__*/_jsxDEV(ImageListItemBar, {\n                className: getTitleBarClassName(item),\n                title: item.title,\n                position: \"top\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, _this)]\n          }, item.url, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null\n  }, void 0, false);\n}\n\n_s(TitlebarImageList, \"jnjjDozQ5d2LfuaC1lU1RjXgQ0Q=\", false, function () {\n  return [useWidth, useNavigate];\n});\n\n_c = TitlebarImageList;\nTitlebarImageList.defaultProps = {\n  galleryAmount: 100\n};\nTitlebarImageList.propTypes = {\n  imagesData: PropTypes.array,\n  galleryAmount: PropTypes.number\n};\nexport default TitlebarImageList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TitlebarImageList\");","map":{"version":3,"sources":["/home/trellis/react-gallery-app/src/layout/TitlebarImageList.js"],"names":["useState","useEffect","useNavigate","PropTypes","useWidth","Typography","ImageList","ImageListItem","ImageListItemBar","TextField","Stack","Autocomplete","availableSizes","getTitleBarClassName","item","className","rows","TitlebarImageList","imagesData","galleryAmount","currentImagesData","setCurrentImagesData","imageSearchResults","setImageSearchResults","windowWidth","width","navigate","routeToImageDetails","path","state","id","url","title","data","slice","map","element","arr","split","cols","Math","round","random","join","option","event","key","defaultMuiPrevented","filter","imageData","includes","target","value","params","InputProps","type","height","defaultProps","propTypes","array","number"],"mappings":"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","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useNavigate } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { useWidth } from '../customHooks/useWidth';\nimport { Typography } from '@mui/material';\nimport ImageList from '@mui/material/ImageList';\nimport ImageListItem from '@mui/material/ImageListItem';\nimport ImageListItemBar from '@mui/material/ImageListItemBar';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Autocomplete from '@mui/material/Autocomplete';\n\nconst availableSizes = [150, 450, 600];\n\nfunction getTitleBarClassName(item) {\n  var className = 'title-bar-';\n  switch (item.rows) {\n    case 1:\n      return className += 's';\n    case 2:\n      return className += 'md';\n    default:\n      return className += 's';\n  }\n}\n\nfunction TitlebarImageList({ imagesData, galleryAmount }) {\n  const [currentImagesData, setCurrentImagesData] = useState(null);\n  const [imageSearchResults, setImageSearchResults] = useState(null);\n  const { width: windowWidth } = useWidth();\n  let navigate = useNavigate();\n\n  const routeToImageDetails = (item) => {\n    let path = `/details`;\n    navigate(path, { state: { id: 1, url: item.url, title: item.title } });\n  }\n\n  useEffect(() => {\n    var data = imagesData.slice(0, galleryAmount);\n    data = data.map((element) => {\n      var arr = element.url.split('/');\n      element.cols = Math.round(1 + Math.random());\n      element.rows = Math.round(1 + Math.random());\n      arr[3] = element.cols === 2 && element.rows === 2 ? availableSizes[2] :\n        element.cols === 2 || element.rows === 2 ? availableSizes[1] :\n          availableSizes[0];\n      element.url = arr.join('/');\n      return element;\n    });\n    setCurrentImagesData(data);\n    setImageSearchResults(data);\n\n  }, [imagesData, galleryAmount])\n\n  return (\n    <>\n      {currentImagesData ?\n        <>\n          <div className=\"gallery-menu\" s\n            style={{ width: `${windowWidth}` }}>\n            <div className=\"headline-item\">\n              <Typography variant=\"h3\" component=\"h4\">\n                Aqua Gallery\n              </Typography>\n            </div>\n            <Stack className=\"search-box-item\" direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2} sx={{ width: 300 }}>\n              <Autocomplete\n                id=\"search-box\"\n                disableClearable\n                options={currentImagesData.map((option) => option.title)}\n                onKeyDown={(event) => {\n                  if (event.key === 'Enter') {\n                    event.defaultMuiPrevented = true;\n                    setImageSearchResults(currentImagesData.filter(imageData => imageData.title.includes(event.target.value)));\n                  }\n                }}\n                renderInput={(params) => (\n                  <TextField\n                    {...params}\n                    label=\"Search input\"\n                    InputProps={{\n                      ...params.InputProps,\n                      type: 'search',\n                    }}\n                  />\n                )}\n              /></Stack>\n          </div>\n          <ImageList sx={{ width: windowWidth, height: 1000 }}\n            cols={4}\n            rowHeight={150}\n            variant=\"quilted\"\n            gap={8}>\n            {imageSearchResults.map((item) => (\n              <ImageListItem key={item.url} cols={item.cols || 1} rows={item.rows || 1}>\n                <img\n                  id=\"img-elm\"\n                  src={`${item.url}?w=248&fit=crop&auto=format`}\n                  srcSet={`${item.url}?w=248&fit=crop&auto=format&dpr=2 2x`}\n                  alt={item.title}\n                  loading=\"lazy\"\n                  onClick={() => routeToImageDetails(item)}\n                />\n                <div id=\"title-bar-elm\">\n                  <ImageListItemBar\n                    className={getTitleBarClassName(item)}\n                    title={item.title}\n                    position={\"top\"}\n                  />\n                </div>\n              </ImageListItem>\n            ))}\n          </ImageList>\n        </> : null}\n    </>\n  );\n}\n\nTitlebarImageList.defaultProps = {\n  galleryAmount: 100\n}\n\nTitlebarImageList.propTypes = {\n  imagesData: PropTypes.array,\n  galleryAmount: PropTypes.number,\n};\n\nexport default TitlebarImageList;"]},"metadata":{},"sourceType":"module"}