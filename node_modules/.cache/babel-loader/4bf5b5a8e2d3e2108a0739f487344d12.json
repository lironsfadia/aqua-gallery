{"ast":null,"code":"var _jsxFileName = \"/home/trellis/react-node-app/client/src/layout/LeafletMap.js\";\nimport { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, TileLayer, Marker, Popup, Polygon, Tooltip, Rectangle, CircleMarker, Circle } from 'react-leaflet';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeafletMap(_ref) {\n  var _this = this;\n\n  var data = _ref.data;\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [45.4, -75.7],\n    zoom: 12,\n    scrollWheelZoom: false,\n    children: data.vehicles.map(function (element) {\n      return /*#__PURE__*/_jsxDEV(Marker, {\n        position: [element.geometry.coordinates[1], element.geometry.coordinates[0]],\n        onClick: function onClick() {\n          setActivePark(element);\n        },\n        icon: icon\n      }, element._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 15\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n}\n\n_c = LeafletMap;\nLeafletMap.propTypes = {\n  data: PropTypes.object.isRequired\n};\nexport default LeafletMap;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeafletMap\");","map":{"version":3,"sources":["/home/trellis/react-node-app/client/src/layout/LeafletMap.js"],"names":["useMemo","useState","PropTypes","MapContainer","TileLayer","Marker","Popup","Polygon","Tooltip","Rectangle","CircleMarker","Circle","LeafletMap","data","vehicles","map","element","geometry","coordinates","setActivePark","icon","_id","propTypes","object","isRequired"],"mappings":";AAAA,SAASA,OAAT,EAAkBC,QAAlB,QAAkC,OAAlC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAT,EACSC,SADT,EAESC,MAFT,EAGSC,KAHT,EAISC,OAJT,EAKSC,OALT,EAMSC,SANT,EAOSC,YAPT,EAQSC,MART,QASO,eATP;;;AAWA,SAASC,UAAT,OAA8B;AAAA;;AAAA,MAARC,IAAQ,QAARA,IAAQ;AAC1B,sBACI,QAAC,YAAD;AAAc,IAAA,MAAM,EAAE,CAAC,IAAD,EAAO,CAAC,IAAR,CAAtB;AAAqC,IAAA,IAAI,EAAE,EAA3C;AAA+C,IAAA,eAAe,EAAE,KAAhE;AAAA,cACKA,IAAI,CAACC,QAAL,CAAcC,GAAd,CAAkB,UAAAC,OAAO;AAAA,0BACxB,QAAC,MAAD;AAEE,QAAA,QAAQ,EAAE,CACNA,OAAO,CAACC,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CADM,EAENF,OAAO,CAACC,QAAR,CAAiBC,WAAjB,CAA6B,CAA7B,CAFM,CAFZ;AAME,QAAA,OAAO,EAAE,mBAAM;AACbC,UAAAA,aAAa,CAACH,OAAD,CAAb;AACD,SARH;AASE,QAAA,IAAI,EAAEI;AATR,SACOJ,OAAO,CAACK,GADf;AAAA;AAAA;AAAA;AAAA,eADwB;AAAA,KAAzB;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAiBH;;KAlBQT,U;AAoBTA,UAAU,CAACU,SAAX,GAAuB;AACnBT,EAAAA,IAAI,EAAEX,SAAS,CAACqB,MAAV,CAAiBC;AADJ,CAAvB;AAIA,eAAeZ,UAAf","sourcesContent":["import { useMemo, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { MapContainer, \n         TileLayer,\n         Marker,\n         Popup,\n         Polygon,\n         Tooltip, \n         Rectangle,\n         CircleMarker,\n         Circle,\n} from 'react-leaflet';\n\nfunction LeafletMap({ data }) {\n    return (\n        <MapContainer center={[45.4, -75.7]} zoom={12} scrollWheelZoom={false}>\n            {data.vehicles.map(element => (\n              <Marker\n                key={element._id}\n                position={[\n                    element.geometry.coordinates[1],\n                    element.geometry.coordinates[0]\n                ]}\n                onClick={() => {\n                  setActivePark(element);\n                }}\n                icon={icon}\n              />\n            ))}\n          </MapContainer>\n    );\n}\n\nLeafletMap.propTypes = {\n    data: PropTypes.object.isRequired,\n};\n  \nexport default LeafletMap;"]},"metadata":{},"sourceType":"module"}